<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE article [
<!ENTITY % BOOK_ENTITIES SYSTEM "hoe-reek.ent">
%BOOK_ENTITIES;
<!ENTITY % sgml.features "IGNORE">
<!ENTITY % xml.features "INCLUDE">
<!ENTITY % DOCBOOK_ENTS PUBLIC "-//OASIS//ENTITIES DocBook Character Entities V4.5//EN" "/usr/share/xml/docbook/schema/dtd/4.5/dbcentx.mod">
%DOCBOOK_ENTS;
]>
<article version="5.0" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
	<xi:include href="Article_Info.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />
	<info>
		<title>hoe-reek</title>
	</info>
	<section>
		<info>
			<title>Einführung</title>
		</info>
		<para>hoe-reek ist eine Erweiterung der Ruby-Projektsoftware hoe (siehe <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://github.com/seattlerb/hoe"/> ). Es erweitert die Standard Rake-Tasks der Software um einen weiteren.</para>
		<para>Die Benutzung erfordert eine installierte Ruby Version (Höher oder gleich 2.2.0), reek, sowie ein installiertes und eingerichtetes hoe.</para>
	</section>
	<section>
		<info>
			<title>Installierung</title>
		</info>
		<para>Die Installation erfolgt in der Konsole via: <command>gem install hoe-reek</command>.</para>
	</section>
	<section>
		<info>
			<title>Einbindung</title>
		</info>
		<para>Zum Einbinden von hoe-reek öffnen Sie das Rakefile Ihres Projektes und schreiben folgendes
			oberhalb der hoe spec Zeile:</para>
		<para><code>Hoe.plugin :reek </code></para>		
		<para><code>Hoe.spec 'yourproject' do ... </code></para>
		<para><code>end</code></para>
		<para>Selbstverständlich tragen Sie hoe-reek auch als Abhängigkeit in Ihr Rakefile ein, und
			generieren ein neues Gemfile. Anschließend steht Ihnen hoe-reek zur Verfügung.</para>
	</section>
	<section>
		<info>
			<title>Benutzung</title>
		</info>
		<para>hoe-reek integriert den zusätzlichen Rake-Task: <itemizedlist>
			<listitem>
				<para><command>rake reek</command></para>
			</listitem>			
		</itemizedlist></para>
		<para><command>rake reek</command> startet reek mit den folgenden Parametern:
		<itemizedlist>
			<listitem>config_file: config.reek</listitem>
			<listitem>source_files = 'lib/**/*.rb'</listitem>
			<listitem>reek_opts = ''</listitem>
			<listitem>fail_on_error = false</listitem>
			<listitem>verbose = true</listitem>
		</itemizedlist>
			So erwartet Reek das Configfile "config.reek" im Haupt-Projektverzeichnis und untersucht alle Dateien unterhalb 'lib'. Es werden keine weiteren Optionen übergeben und Reek bricht bei einem gefundenen Fehler nicht gleich ab. Zusätzlich wurde die Option "Verbose" gewählt, um weiteren Output zu erhalten.
		</para>
		<para>Die Spezifikation des "config.reek" Files entnehmen Sie hier: <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://github.com/troessner/reek#configuration-file">https://github.com/troessner/reek#configuration-file</link></para>
	</section>
	<section>
		<title>Weitere Informationen</title>
		<para>Die API-Dokumentation von hoe-reek liegt hier: <link
				xmlns:xlink="http://www.w3.org/1999/xlink"
				xlink:href="http://www.rubydoc.info/gems/hoe-reek"
				>http://www.rubydoc.info/gems/hoe-reek</link>.</para>
		<para>Bugreports und Feature Requests können gerne hier eingereicht werden: <link
			xmlns:xlink="http://www.w3.org/1999/xlink"
			xlink:href="https://saigkill.myjetbrains.com/youtrack/issues"
			>https://saigkill.myjetbrains.com/youtrack/issues</link>.</para>
		<para>
			<caution>
				<para>Diese Software wurde auf einem Linux-System mit RVM als Rubymanager entworfen
					und getestet. Sollte jemand eine Idee haben, wie man die Software auch unter
					anderen Betriebssystemen oder Rubymanagern lauffähig macht, kann er gerne einen
					Pull-Request im Github Projekt einreichen.</para>
			</caution>
		</para>
	</section>	
	<xi:include href="Revision_History.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />
	<index />
</article>

